---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: ${RAILS_API_NAMESPACE}
  name: ${RAILS_API_DEPLOYMENT_NAME}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: ${RAILS_API_APP_NAME}
      namespace: ${RAILS_API_NAMESPACE}
      alpha.eksctl.io/nodegroup-name: ${RAILS_API_NODE_GROUP}
  replicas: ${RAILS_API_MIN_REP}
  revisionHistoryLimit: 4
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ${RAILS_API_APP_NAME}
        namespace: ${RAILS_API_NAMESPACE}
        alpha.eksctl.io/nodegroup-name: ${RAILS_API_NODE_GROUP}
    spec:
      containers:
        - image: ${RAILS_API_REPOSITORY}:${TAG}
          imagePullPolicy: Always
          name: ${RAILS_API_APP_NAME}
          ports:
            - containerPort: 3000
          resources:
            requests:
              cpu: ${RAILS_API_REQ_CPU}
              memory: ${RAILS_API_REQ_MEM}
            limits:
              cpu: ${RAILS_API_LIM_CPU}
              memory: ${RAILS_API_LIM_MEM}
          livenessProbe:
            exec:
              command:
                - /bin/bash
                - -c
                - |-
                  used=$(awk '{ print int($1/1.049e+6) }' /sys/fs/cgroup/memory/memory.usage_in_bytes);
                  thresh=$(awk '{ print int( $1 / 1.049e+6 * 0.95 ) }' /sys/fs/cgroup/memory/memory.limit_in_bytes);
                  if [[ ${used} -gt ${thresh} ]]; then exit 1; fi
            initialDelaySeconds: 300
            periodSeconds: 20
            failureThreshold: 2
            timeoutSeconds: 2
          volumeMounts:
            - mountPath: /storage
              name: ${RAILS_API_VOLUME}
      volumes:
        - name: ${RAILS_API_VOLUME}
          persistentVolumeClaim:
            claimName: ${RAILS_API_PVC}
      nodeSelector:
        "eks.amazonaws.com/nodegroup": ${RAILS_API_NODE_GROUP}
