---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: ${GQLSWIS_NAMESPACE}
  name: ${GQLSWIS_DEPLOYMENT_NAME}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: ${GQLSWIS_APP_NAME}
      namespace: ${GQLSWIS_NAMESPACE}
      cloud.google.com/gke-nodepool: swis-ng #${GQLSWIS_NODE_GROUP}
  replicas: ${GQLSWIS_MIN_REP}
  revisionHistoryLimit: 4
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ${GQLSWIS_APP_NAME}
        namespace: ${GQLSWIS_NAMESPACE}
        cloud.google.com/gke-nodepool: swis-ng #${GQLSWIS_NODE_GROUP}
    spec:
      serviceAccountName: ksa-sa
      containers:
        - name: ${GQLSWIS_APP_NAME}
          image: "us-east4-docker.pkg.dev/experiencedotcom-devops/experiencedotcom-dev/swis-graphql:latest"
          imagePullPolicy: Always        
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 20
            timeoutSeconds: 10
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 20
            timeoutSeconds: 10
          envFrom:
            - secretRef:
                name: ${GQLSWIS_SECRET}
        - name: cloud-sql-proxy
          image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:latest
          args:
            - "--private-ip"
            - "--port=3306"
            - "experiencedotcom-dev:us-east4:ss-prd1-v2-app-mysql-dev"
          securityContext:
            runAsNonRoot: true
          resources:
            requests:
              cpu: ${GQLSWIS_REQ_CPU}
              memory: ${GQLSWIS_REQ_MEM}
            limits:
              cpu: ${GQLSWIS_LIM_CPU}
              memory: ${GQLSWIS_LIM_MEM}
      #     volumeMounts:
      #       - mountPath: /storage
      #         name: ${GQLSWIS_VOLUME}
      # volumes:
      #   - name: ${GQLSWIS_VOLUME}
      #     persistentVolumeClaim:
      #       claimName: ${GQLSWIS_PVC}
      nodeSelector:
        cloud.google.com/gke-nodepool: swis-ng #${GQLSWIS_NODE_GROUP}
  