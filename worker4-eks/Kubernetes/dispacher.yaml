---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: ${WORKER_RAILSAPI_NAMESPACE}
  name: ${WORKER_DEPLOYMENT_NAME_DISPATCHER}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: ${WORKER_APP_NAME_DISPATCHER}
  replicas: ${WORKER_DISPATCHER_REP}
  revisionHistoryLimit: 4
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ${WORKER_APP_NAME_DISPATCHER}
    spec:
      containers:
        - image: "us-east4-docker.pkg.dev/experiencedotcom-devops/experiencedotcom-dev/worker4-rails-api:latest"
          imagePullPolicy: Always
          name: ${WORKER_APP_NAME_DISPATCHER}
          command:
            - ruby
            - /var/lib/v2-api/workers/campaigns/dispatcher.rb
          resources:
            requests:
              cpu: ${WORKER_DISPATCHER_REQ_CPU}
              memory: ${WORKER_DISPATCHER_REQ_MEM}
            limits:
              cpu: ${WORKER_DISPATCHER_LIM_CPU}
              memory: ${WORKER_DISPATCHER_LIM_MEM}
          # livenessProbe:
          #   exec:
          #     command:
          #       - /bin/bash
          #       - -c
          #       - |-
          #         used=$(awk '{ print int($1/1.049e+6) }' /sys/fs/cgroup/memory/memory.usage_in_bytes);
          #         thresh=$(awk '{ print int( $1 / 1.049e+6 * 0.95 ) }' /sys/fs/cgroup/memory/memory.limit_in_bytes);
          #         if [[ ${used} -gt ${thresh} ]]; then exit 1; fi
          #   initialDelaySeconds: 300
          #   periodSeconds: 20
          #   failureThreshold: 2
          #   timeoutSeconds: 2
#          volumeMounts:
#            - mountPath: /storage
#              name: ${WORKER_RAILSAPI_VOLUME}
#      volumes:
#        - name: ${WORKER_RAILSAPI_VOLUME}
#          persistentVolumeClaim:
#            claimName: ${WORKER_RAILSAPI_PVC}
      nodeSelector:
        cloud.google.com/gke-nodepool: rails-ng #${WORKER_RAILSAPI_NODE_GROUP}
