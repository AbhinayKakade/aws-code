---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: ${DART_NAMESPACE}
  name: ${DART_DEPLOYMENT_NAME}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: ${DART_APP_NAME}
      namespace: ${DART_NAMESPACE}
      cloud.google.com/gke-nodepool: swis_ng # ${DART_NODE_GROUP}
  replicas: ${DART_MIN_REP}
  revisionHistoryLimit: 4
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ${DART_APP_NAME}
        namespace: ${DART_NAMESPACE}
        cloud.google.com/gke-nodepool: swis_ng # ${DART_NODE_GROUP}
    spec:
      containers:
        # - image: ${DART_REPOSITORY}:${TAG}
        - image: us-east4-docker.pkg.dev/experiencedotcom-devops/experiencedotcom-dev/dart:latest        
          imagePullPolicy: Always
          name: ${DART_APP_NAME}
          ports:
            - containerPort: 5000
          envFrom:
            - secretRef:
                name: ${DART_SECRET}
          resources:
            requests:
              cpu: ${DART_REQ_CPU}
              memory: ${DART_REQ_MEM}
            limits:
              cpu: ${DART_LIM_CPU}
              memory: ${DART_LIM_MEM}
          # volumeMounts:
          #   - mountPath: /storage
          #     name: ${DART_VOLUME}
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /
              port: 5000
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
      # volumes:
      #   - name: ${DART_VOLUME}
      #     persistentVolumeClaim:
      #       claimName: ${DART_PVC}
      nodeSelector:
        cloud.google.com/gke-nodepool: swis_ng # ${DART_NODE_GROUP}
